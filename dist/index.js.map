{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { defer } from 'rsvp';\nimport { later } from '@ember/runloop';\n\nimport type ConfigRegistry from './registry.ts';\n\nexport type RuntimeConfig = keyof ConfigRegistry extends never\n  ? { [key: string]: string }\n  : ConfigRegistry;\n\nconst config = defer<RuntimeConfig>();\n\nfunction checkConfig(): void {\n  if (window._erc) {\n    config.resolve(window._erc);\n  } else {\n    later(checkConfig, 10);\n  }\n}\n\nexport function awaitRuntimeConfig(): Promise<RuntimeConfig> {\n  checkConfig();\n  return config.promise;\n}\n\nexport default new Proxy({} as RuntimeConfig, {\n  get<K extends keyof RuntimeConfig>(\n    target: RuntimeConfig,\n    prop: string\n  ): RuntimeConfig[K] {\n    // Safeguard for the case if /env.js has not resolved yet.\n    return (window._erc || target)[prop]!;\n  },\n});\n"],"names":["config","defer","checkConfig","window","_erc","resolve","later","awaitRuntimeConfig","promise","Proxy","get","target","prop"],"mappings":";;;AASA,MAAMA,MAAM,GAAGC,KAAK,EAAiB,CAAA;AAErC,SAASC,WAAWA,GAAS;EAC3B,IAAIC,MAAM,CAACC,IAAI,EAAE;AACfJ,IAAAA,MAAM,CAACK,OAAO,CAACF,MAAM,CAACC,IAAI,CAAC,CAAA;AAC7B,GAAC,MAAM;AACLE,IAAAA,KAAK,CAACJ,WAAW,EAAE,EAAE,CAAC,CAAA;AACxB,GAAA;AACF,CAAA;AAEO,SAASK,kBAAkBA,GAA2B;AAC3DL,EAAAA,WAAW,EAAE,CAAA;EACb,OAAOF,MAAM,CAACQ,OAAO,CAAA;AACvB,CAAA;AAEA,eAAe,IAAIC,KAAK,CAAC,EAAE,EAAmB;AAC5CC,EAAAA,GAAGA,CACDC,MAAqB,EACrBC,IAAY,EACM;AAClB;IACA,OAAO,CAACT,MAAM,CAACC,IAAI,IAAIO,MAAM,EAAEC,IAAI,CAAC,CAAA;AACtC,GAAA;AACF,CAAC,CAAC;;;;"}